version: '2'

services:
    # App backend service
  app-server:
    # Configuration for building the docker image for the backend service
    build:
      context: arquiveiNFE # Use an image built from the specified dockerfile in the `arquiveiNFE` directory.
      dockerfile: Dockerfile
    ports:
      - "8080:8080" # Forward the exposed port 8080 on the container to port 8080 on the host machine
    restart: always
    depends_on: 
      - db # This service depends on mysql. Start that first.
    environment: # Pass environment variables to the service
      SPRING_DATASOURCE_URL: jdbc:postgresql://db:5432/postgres
      SPRING_DATASOURCE_USERNAME: postgres
      SPRING_DATASOURCE_PASSWORD: postgres     
    networks: # Networks to join (Services on the same network can communicate with each other using their name)
      - backend

  # we will use postgres as one of our sinks.
  # This configuration allows you to start postgres
  db:
    image: postgres:9.5-alpine
    environment:
      POSTGRES_USER: postgres     # define credentials
      POSTGRES_PASSWORD: postgres # define credentials
      POSTGRES_DB: postgres       # define database
    ports:
      - 5432:5432                 # Postgres port
    restart: always
    volumes:
      - db-data:/var/lib/postgres
    networks:
      - backend
# Volumes
volumes:
  db-data:

# Networks to be created to facilitate communication between containers
networks:
  backend: